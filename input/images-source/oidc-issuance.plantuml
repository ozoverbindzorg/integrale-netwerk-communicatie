@startuml
actor "User Agent" as user
control "Client applicatie" as client_app
control "NUTS node client" as client_nuts
boundary "OZO issuer" as ozo_issuer

autonumber 1.1.1

user -> client_app: connect with OZO
client_app -> client_nuts: start_oid4vci_issuance (issuer=did:web:ozo)
client_nuts -> ozo_issuer: /.well-known/openid-credential-issuer
ozo_issuer --> client_nuts: openid-credential-issuer configuration
client_nuts -> client_nuts: get authorization_servers
client_nuts -> ozo_issuer: /.well-known/openid-configuration
ozo_issuer --> client_nuts: openid configuration
client_nuts -> client_nuts: get authorization_endpoint
client_nuts -> client_nuts: generate redirect to /authorization_endpoint \n (redirect_uri, authorization_details)
client_nuts -> client_app: 302, Location: /authorization_endpoint
client_app --> user: 302, Location: /authorization_endpoint

autonumber inc B
user -> ozo_issuer: GET /authorization_endpoint
ozo_issuer -> user: authorization page
user --> ozo_issuer: login credentials
ozo_issuer -> ozo_issuer: validate credentials
ozo_issuer -> user: 302: Location: /redirect_uri?code=x

autonumber inc B
user -> client_nuts: GET /redirect_uri?code=x
client_nuts -> ozo_issuer: GET /token?code=x
ozo_issuer -> ozo_issuer: generate access_token
ozo_issuer --> client_nuts: access_token
client_nuts -> ozo_issuer: GET /credential (Authorization: Bearer ${access_token})
ozo_issuer -> ozo_issuer: generate VCs
ozo_issuer --> client_nuts: VC
client_nuts -> client_nuts: store VC
client_nuts --> user: 200 OK
@enduml
