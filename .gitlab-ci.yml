# GitLab CI/CD Configuration for OZO FHIR Implementation Guide

stages:
  - build
  - deploy

variables:
  # Use the pre-built Docker image from GitLab registry
  BUILDER_IMAGE: $CI_REGISTRY/headease/ozo-refererence-impl/ozo-implementation-guide/main:latest
  # Disable TLS for DinD (simplifies local runners / shared runners)
  DOCKER_TLS_CERTDIR: ""
  # Use overlay2 driver for better performance
  DOCKER_DRIVER: overlay2

# Build the Implementation Guide on all branches
build:
  stage: build
  image:
    name: $BUILDER_IMAGE
    # Override the default entrypoint to prevent conflicts with GitLab CI's shell execution
    # GitLab CI passes commands with 'sh -c' which would conflict with docker-entrypoint.sh
    # The entrypoint still works normally when running 'docker run' from the host machine
    entrypoint: [""]
  script:
    - echo "Building OZO Implementation Guide..."
    - make build
    # Move output to public directory for GitLab Pages deployment
    - mv ./output ./public
  artifacts:
    name: "ozo-ig-${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"
    paths:
      - output/
      - public/
    expire_in: 30 days
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH

# Deploy to GitLab Pages (main branch only)
pages:
  stage: deploy
  image: alpine:latest
  dependencies:
    - build
  script:
    - echo "Deploying Implementation Guide to GitLab Pages..."
    - test -d "./public" || (echo "Error public directory does not exist" && exit 1)
    - test "$(ls -A ./public)" || (echo "Error public directory is empty" && exit 1)
    - ls -la ./public/
    - echo "Deployment successful!"
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

# Optional: Validate FSH files
validate:
  stage: build
  image:
    name: $BUILDER_IMAGE
    # Override entrypoint (same reason as build job - see above)
    entrypoint: [""]
  script:
    - echo "Validating FSH files..."
    - make validate
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH
  allow_failure: true

# Optional: Build Docker image (manual trigger)
build-docker-image:
  stage: build
  image: docker:24
  services:
    - docker:24-dind
  variables:
    # Override if you prefer a different network or daemon opts
    DOCKER_HOST: "tcp://docker:2375"
  before_script:
    - echo "$CI_JOB_TOKEN" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"
  script:
    - echo "Building Docker image..."
    - docker build --pull -t $BUILDER_IMAGE .
    - docker push $BUILDER_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
